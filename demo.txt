what is protobuf?
what is rpc?
what is grpc?
review example.json
review proto file
clean files
review protoc/generate
review code
    generated
        rpc stubs
        rest stubs
        swagger.json
review client code
benefits of protobuf
    - schemas
    - server/client generated from same proto   
    - backwards compatability
    - binary format so its fast
    - focus on "what" and now "how"
    - generator plugins
long term benefits of grpc
what is graphql
execute graphql queries
execute graphql schema queries
graphIql





Benefits:
    Immediate:
        - REST Server / RPC Server / TYPES / Swagger all genearted from proto file
        - over 10 languages supported
        - Protobuff provides backwards compatability
        - Focus on business logic and not supporting middleware
            - some of our routes have over 500 lines of code 
    Long Term:
        Bidirectional Stream from client to server
        Persistent connections
        Flow Control
        Multiplexing


Challenges:
    tyk with gRPC
    versioning 


graphIql

graphql:
curl -H -XPOST 'http://localhost:8080/graphql' -d '{ "query": "{markers{point homeTeam}}"}'
curl -H -XPOST 'http://localhost:8080/schema' -d '{ "query": "{__schema{types{name}}}"}' -v