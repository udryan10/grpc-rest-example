// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

/*
Package generated is a generated protocol buffer package.

It is generated from these files:
	example.proto

It has these top-level messages:
	Maps
	Marker
	EmptyGet
*/
package generated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Maps struct {
	Markers []*Marker `protobuf:"bytes,1,rep,name=markers" json:"markers,omitempty"`
}

func (m *Maps) Reset()                    { *m = Maps{} }
func (m *Maps) String() string            { return proto.CompactTextString(m) }
func (*Maps) ProtoMessage()               {}
func (*Maps) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Maps) GetMarkers() []*Marker {
	if m != nil {
		return m.Markers
	}
	return nil
}

type Marker struct {
	Point         int32  `protobuf:"varint,1,opt,name=point" json:"point,omitempty"`
	HomeTeam      string `protobuf:"bytes,2,opt,name=homeTeam" json:"homeTeam,omitempty"`
	AwayTeam      string `protobuf:"bytes,3,opt,name=awayTeam" json:"awayTeam,omitempty"`
	MarkerImage   string `protobuf:"bytes,4,opt,name=markerImage" json:"markerImage,omitempty"`
	Information   string `protobuf:"bytes,5,opt,name=information" json:"information,omitempty"`
	Fixture       string `protobuf:"bytes,6,opt,name=fixture" json:"fixture,omitempty"`
	Capacity      string `protobuf:"bytes,7,opt,name=capacity" json:"capacity,omitempty"`
	PreviousScore string `protobuf:"bytes,8,opt,name=previousScore" json:"previousScore,omitempty"`
	Tv            string `protobuf:"bytes,9,opt,name=tv" json:"tv,omitempty"`
}

func (m *Marker) Reset()                    { *m = Marker{} }
func (m *Marker) String() string            { return proto.CompactTextString(m) }
func (*Marker) ProtoMessage()               {}
func (*Marker) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Marker) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *Marker) GetHomeTeam() string {
	if m != nil {
		return m.HomeTeam
	}
	return ""
}

func (m *Marker) GetAwayTeam() string {
	if m != nil {
		return m.AwayTeam
	}
	return ""
}

func (m *Marker) GetMarkerImage() string {
	if m != nil {
		return m.MarkerImage
	}
	return ""
}

func (m *Marker) GetInformation() string {
	if m != nil {
		return m.Information
	}
	return ""
}

func (m *Marker) GetFixture() string {
	if m != nil {
		return m.Fixture
	}
	return ""
}

func (m *Marker) GetCapacity() string {
	if m != nil {
		return m.Capacity
	}
	return ""
}

func (m *Marker) GetPreviousScore() string {
	if m != nil {
		return m.PreviousScore
	}
	return ""
}

func (m *Marker) GetTv() string {
	if m != nil {
		return m.Tv
	}
	return ""
}

type EmptyGet struct {
}

func (m *EmptyGet) Reset()                    { *m = EmptyGet{} }
func (m *EmptyGet) String() string            { return proto.CompactTextString(m) }
func (*EmptyGet) ProtoMessage()               {}
func (*EmptyGet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Maps)(nil), "generated.Maps")
	proto.RegisterType((*Marker)(nil), "generated.Marker")
	proto.RegisterType((*EmptyGet)(nil), "generated.EmptyGet")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MapsService service

type MapsServiceClient interface {
	GetMaps(ctx context.Context, in *EmptyGet, opts ...grpc.CallOption) (*Maps, error)
}

type mapsServiceClient struct {
	cc *grpc.ClientConn
}

func NewMapsServiceClient(cc *grpc.ClientConn) MapsServiceClient {
	return &mapsServiceClient{cc}
}

func (c *mapsServiceClient) GetMaps(ctx context.Context, in *EmptyGet, opts ...grpc.CallOption) (*Maps, error) {
	out := new(Maps)
	err := grpc.Invoke(ctx, "/generated.MapsService/GetMaps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MapsService service

type MapsServiceServer interface {
	GetMaps(context.Context, *EmptyGet) (*Maps, error)
}

func RegisterMapsServiceServer(s *grpc.Server, srv MapsServiceServer) {
	s.RegisterService(&_MapsService_serviceDesc, srv)
}

func _MapsService_GetMaps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapsServiceServer).GetMaps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.MapsService/GetMaps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapsServiceServer).GetMaps(ctx, req.(*EmptyGet))
	}
	return interceptor(ctx, in, info, handler)
}

var _MapsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "generated.MapsService",
	HandlerType: (*MapsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMaps",
			Handler:    _MapsService_GetMaps_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}

func init() { proto.RegisterFile("example.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xc1, 0x4e, 0xf2, 0x40,
	0x14, 0x85, 0xd3, 0x02, 0x2d, 0x5c, 0x7e, 0x7e, 0xe3, 0xe8, 0x62, 0x42, 0x5c, 0x34, 0x8d, 0x0b,
	0x12, 0x13, 0x48, 0x60, 0xed, 0xd2, 0x10, 0x13, 0xd9, 0x80, 0x2f, 0x70, 0xad, 0x97, 0x3a, 0x91,
	0xe9, 0x4c, 0xa6, 0x43, 0x85, 0xad, 0x0b, 0x5f, 0xc0, 0x47, 0xf3, 0x15, 0x7c, 0x10, 0xd3, 0x99,
	0x94, 0x94, 0xe5, 0x39, 0xdf, 0x97, 0xde, 0xf4, 0x0c, 0x8c, 0xe8, 0x80, 0x52, 0xef, 0x68, 0xaa,
	0x8d, 0xb2, 0x8a, 0x0d, 0x72, 0x2a, 0xc8, 0xa0, 0xa5, 0xd7, 0xf1, 0x4d, 0xae, 0x54, 0xbe, 0xa3,
	0x19, 0x6a, 0x31, 0xc3, 0xa2, 0x50, 0x16, 0xad, 0x50, 0x45, 0xe9, 0xc5, 0x74, 0x01, 0xdd, 0x15,
	0xea, 0x92, 0xdd, 0x41, 0x2c, 0xd1, 0xbc, 0x93, 0x29, 0x79, 0x90, 0x74, 0x26, 0xc3, 0xf9, 0xe5,
	0xf4, 0xf4, 0x89, 0xe9, 0xca, 0x91, 0x75, 0x63, 0xa4, 0x5f, 0x21, 0x44, 0xbe, 0x63, 0xd7, 0xd0,
	0xd3, 0x4a, 0x14, 0x96, 0x07, 0x49, 0x30, 0xe9, 0xad, 0x7d, 0x60, 0x63, 0xe8, 0xbf, 0x29, 0x49,
	0xcf, 0x84, 0x92, 0x87, 0x49, 0x30, 0x19, 0xac, 0x4f, 0xb9, 0x66, 0xf8, 0x81, 0x47, 0xc7, 0x3a,
	0x9e, 0x35, 0x99, 0x25, 0x30, 0xf4, 0x37, 0x1e, 0x25, 0xe6, 0xc4, 0xbb, 0x0e, 0xb7, 0xab, 0xda,
	0x10, 0xc5, 0x56, 0x19, 0xe9, 0xfe, 0x82, 0xf7, 0xbc, 0xd1, 0xaa, 0x18, 0x87, 0x78, 0x2b, 0x0e,
	0x76, 0x6f, 0x88, 0x47, 0x8e, 0x36, 0xb1, 0xbe, 0x9c, 0xa1, 0xc6, 0x4c, 0xd8, 0x23, 0x8f, 0xfd,
	0xe5, 0x26, 0xb3, 0x5b, 0x18, 0x69, 0x43, 0x95, 0x50, 0xfb, 0x72, 0x93, 0x29, 0x43, 0xbc, 0xef,
	0x84, 0xf3, 0x92, 0xfd, 0x87, 0xd0, 0x56, 0x7c, 0xe0, 0x50, 0x68, 0xab, 0x14, 0xa0, 0xff, 0x20,
	0xb5, 0x3d, 0x2e, 0xc9, 0xce, 0x9f, 0x60, 0x58, 0x2f, 0xb9, 0x21, 0x53, 0x89, 0x8c, 0xd8, 0x3d,
	0xc4, 0x4b, 0xb2, 0x6e, 0xdb, 0xab, 0xd6, 0x94, 0x8d, 0x3e, 0xbe, 0x38, 0xdb, 0x57, 0x97, 0xe9,
	0xbf, 0xcf, 0x9f, 0xdf, 0xef, 0x30, 0x62, 0xdd, 0x99, 0x44, 0xfd, 0x12, 0xb9, 0xe7, 0x59, 0xfc,
	0x05, 0x00, 0x00, 0xff, 0xff, 0x15, 0x9e, 0x6a, 0xf5, 0xd8, 0x01, 0x00, 0x00,
}
